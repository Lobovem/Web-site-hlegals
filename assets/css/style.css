/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */
html{
  line-height:1.15;
  -webkit-text-size-adjust:100%;
}
body{
  margin:0;
}
main{
  display:block;
}
h1{
  font-size:2em;
  margin:0.67em 0;
}
hr{
  box-sizing:content-box;
  height:0;
  overflow:visible;
}
pre{
  font-family:monospace, monospace;
  font-size:1em;
}
a{
  background-color:transparent;
}
abbr[title]{
  border-bottom:none;
  text-decoration:underline;
  text-decoration:underline dotted;
}
b,
strong{
  font-weight:bolder;
}
code,
kbd,
samp{
  font-family:monospace, monospace;
  font-size:1em;
}
small{
  font-size:80%;
}
sub,
sup{
  font-size:75%;
  line-height:0;
  position:relative;
  vertical-align:baseline;
}

sub{
  bottom:-0.25em;
}

sup{
  top:-0.5em;
}
img{
  border-style:none;
}
button,
input,
optgroup,
select,
textarea{
  font-family:inherit;
  font-size:100%;
  line-height:1.15;
  margin:0;
}
button,
input{
  overflow:visible;
}
button,
select{
  text-transform:none;
}
button,
[type=button],
[type=reset],
[type=submit]{
  -webkit-appearance:button;
}
button::-moz-focus-inner,
[type=button]::-moz-focus-inner,
[type=reset]::-moz-focus-inner,
[type=submit]::-moz-focus-inner{
  border-style:none;
  padding:0;
}
button:-moz-focusring,
[type=button]:-moz-focusring,
[type=reset]:-moz-focusring,
[type=submit]:-moz-focusring{
  outline:1px dotted ButtonText;
}
fieldset{
  padding:0.35em 0.75em 0.625em;
}
legend{
  box-sizing:border-box;
  color:inherit;
  display:table;
  max-width:100%;
  padding:0;
  white-space:normal;
}
progress{
  vertical-align:baseline;
}
textarea{
  overflow:auto;
}
[type=checkbox],
[type=radio]{
  box-sizing:border-box;
  padding:0;
}
[type=number]::-webkit-inner-spin-button,
[type=number]::-webkit-outer-spin-button{
  height:auto;
}
[type=search]{
  -webkit-appearance:textfield;
  outline-offset:-2px;
}
[type=search]::-webkit-search-decoration{
  -webkit-appearance:none;
}
::-webkit-file-upload-button{
  -webkit-appearance:button;
  font:inherit;
}
details{
  display:block;
}
summary{
  display:list-item;
}
template{
  display:none;
}
[hidden]{
  display:none;
}

@font-face{
  font-family:"TT Norms";
  src:url("../fonts/TTNorms-Bold.woff2") format("woff2");
  font-weight:bold;
  font-style:normal;
  font-display:swap;
}
@font-face{
  font-family:"TT Norms";
  src:url("../fonts/TTNorms-Medium.woff2") format("woff2");
  font-weight:500;
  font-style:normal;
  font-display:swap;
}
@font-face{
  font-family:"TT Norms";
  src:url("../fonts/TTNorms-Regular.woff2") format("woff2");
  font-weight:normal;
  font-style:normal;
  font-display:swap;
}
.visually-hidden{
  position:absolute;
  overflow:hidden;
  clip:rect(0 0 0 0);
  width:1px;
  height:1px;
  margin:-1px;
  padding:0;
  white-space:nowrap;
  border:0;
  clip-path:inset(100%);
}

.container{
  width:min(100% - 40px, 1320px);
  margin-inline:auto;
}

*,
*::before,
*::after{
  box-sizing:border-box;
  margin:0;
  padding:0;
}

html{
  font-family:"TT Norms", sans-serif;
  font-size:16px;
  font-weight:normal;
  font-style:normal;
}

.body{
  color:#000000;
}

a{
  text-decoration:none;
  color:#000000;
}

.contacts{
  display:flex;
  grid-area:cont;
  align-items:center;
}
.contacts__lang-link{
  font-weight:700;
  font-size:12px;
  line-height:14px;
  letter-spacing:1px;
  color:#ffffff;
  grid-area:lang;
  padding:2px;
}
.contacts__lang-link--active{
  background:#f0145a;
  border-radius:8px;
  padding:5px;
}
.contacts__address-link{
  line-height:19px;
  color:#ffffff;
  padding:5px;
  font-style:normal;
}
.contacts__phone-link{
  font-weight:700;
  line-height:19px;
  color:#ffffff;
  padding:5px;
}
.contacts__social-link{
  padding:5px 0 5px 5px;
}
.header{
  position:relative;
  min-height:800px;
}
.header::after{
  content:"";
  background:linear-gradient(to top, #323264 0, transparent 100%);
  position:absolute;
  top:70%;
  right:0;
  bottom:0;
  left:0;
}
.header__grid{
  display:grid;
  margin-bottom:182px;
  gap:10px;
}
.header__logo{
  grid-area:logo;
}
.header__title{
  padding-left:20px;
  padding-right:20px;
  font-size:38px;
  line-height:45px;
  font-weight:500;
  text-align:center;
  color:#ffffff;
  max-width:615px;
  position:absolute;
  z-index:1;
  padding-top:35px;
}
.header__picture{
  display:flex;
  justify-content:center;
  align-items:flex-start;
}
.header__scroll{
  position:absolute;
  margin-left:auto;
  margin-right:auto;
  left:0;
  right:0;
  text-align:center;
  top:92%;
  z-index:3;
}

.navbar{
  grid-area:burger;
}
.navbar__list{
  grid-area:menu;
  display:flex;
  margin:0;
  padding:0;
  list-style:none;
  gap:10px;
}
.navbar__link{
  color:#ffffff;
  padding:5px 0 5px 5px;
  font-size:18px;
  line-height:21px;
}
.navbar__burger{
  position:relative;
  width:40px;
  height:30px;
  cursor:pointer;
}
.navbar__burger span{
  position:absolute;
  left:0;
  display:block;
  width:100%;
  height:5px;
  transition:0.25s ease-in-out;
  transform:rotate(0deg);
  opacity:1;
  background-color:#ffffff;
}
.navbar__burger span:nth-of-type(1){
  top:0;
}
.navbar__burger span:nth-of-type(2){
  top:12px;
}
.navbar__burger span:nth-of-type(3){
  top:24px;
}
.navbar__burger.active span:nth-of-type(1){
  top:12px;
  transform:rotate(135deg);
}
.navbar__burger.active span:nth-of-type(2){
  left:-40px;
  opacity:0;
}
.navbar__burger.active span:nth-of-type(3){
  top:12px;
  transform:rotate(-135deg);
}

.benefits-info{
  display:flex;
  align-items:center;
  padding-bottom:80px;
}
.benefits-info__list{
  margin:0;
  padding:0;
  list-style:none;
  padding-right:40px;
  max-width:530px;
  display:flex;
  flex-direction:column;
}
.benefits-info__item{
  text-align:right;
}
.benefits-info__link{
  font-size:42px;
  line-height:50px;
  color:#b3b3ba;
  font-weight:700;
}
.benefits-info__link--accent{
  background:linear-gradient(90.13deg, #ef8080 0.84%, #f0145a 99.96%);
  -webkit-background-clip:text;
  -webkit-text-fill-color:transparent;
}
.benefits-info__text-box{
  display:flex;
  flex-direction:column;
  gap:20px;
}
.benefits-info__title{
  font-size:32px;
  line-height:38px;
  color:#ffffff;
}
.benefits-info__description{
  font-size:21px;
  line-height:30px;
  color:#ffffff;
}
.benefits-info__button{
  display:flex;
  gap:10px;
}
.item-benefits__picture{
  display:flex;
}
.item-benefits__img-box{
  width:92px;
  height:92px;
  background:#ffffff;
  border-radius:24px;
  display:flex;
  justify-content:center;
  align-items:center;
}
.item-benefits__title{
  font-size:24px;
  line-height:28px;
  color:#24a3ff;
  order:1;
  font-weight:normal;
}
.item-benefits__description{
  font-size:18px;
  line-height:26px;
  color:#ffffff;
}

.Benefits{
  position:relative;
  background:linear-gradient(228.57deg, #323264 11.93%, #323264 60%, #643e72 87.46%);
  border-radius:0px 0px 12px 12px;
}
.Benefits::after{
  content:"";
  display:block;
  height:10px;
  width:96vw;
  position:absolute;
  background:#cacadb;
  border-radius:0px 0px 12px 12px;
  margin-left:auto;
  margin-right:auto;
  left:0;
  right:0;
}
.Benefits::before{
  content:"";
  display:block;
  height:10px;
  width:93vw;
  position:absolute;
  background:#e7e7f2;
  border-radius:0px 0px 12px 12px;
  margin-left:auto;
  margin-right:auto;
  left:0;
  right:0;
  bottom:-19px;
}

.benefits-content__link{
  position:relative;
  font-size:14px;
  line-height:17px;
  letter-spacing:1px;
  font-weight:500;
  text-transform:uppercase;
  color:#ffffff;
  opacity:0.5;
  display:block;
  padding:2px 2px 2px 0;
}
.benefits-content__link::after{
  content:"";
  background-image:url(../img/arrow-right.svg);
  background-repeat:no-repeat;
  position:absolute;
  left:82px;
  right:0;
  top:5px;
  bottom:0;
}
.benefits-content__title{
  font-size:42px;
  line-height:50px;
  background:linear-gradient(90.13deg, #f0145a 0.84%, #ef8080 99.96%);
  -webkit-background-clip:text;
  -webkit-text-fill-color:transparent;
  margin-bottom:68px;
}
.benefits-content__wrap{
  display:grid;
  gap:58px 54px;
  padding-bottom:76px;
}
@media (min-width: 576px){
  .header__img{
    height:500px;
  }
  .navbar__burger{
    display:none;
  }
  .benefits-info{
    padding-top:80px;
  }
  .item-benefits__picture{
    flex-direction:column;
    margin-bottom:15px;
    gap:20px;
  }
}
@media (min-width: 768px){
  .contacts{
    justify-content:flex-end;
  }
  .header{
    padding-top:48px;
    background:url(../img/bg-logo.svg) center 98% no-repeat, linear-gradient(42.01deg, #323264 14.33%, #323264 60.39%, #7a425e 87.53%) center no-repeat;
  }
  .header__grid{
    grid-template-areas:"logo cont" "logo burger";
    justify-content:space-between;
    grid-template-columns:1fr 3fr;
  }
  .navbar__list{
    justify-content:end;
  }
}
@media (min-width: 992px){
  .benefits-info__list{
    gap:20px;
    border-right:4px solid #e6e6f0;
  }
  .benefits-info__text-box{
    padding-left:40px;
    max-width:630px;
  }
  .benefits-content__wrap{
    grid-template-columns:1fr 1fr 1fr;
  }
}
@media (max-width: 991.8px){
  .benefits-info{
    flex-wrap:wrap;
    padding-bottom:30px;
  }
  .benefits-info__link{
    display:none;
  }
  .benefits-info__link--accent{
    display:block;
    font-size:42px;
    line-height:50px;
    color:#b3b3ba;
    font-weight:700;
  }
  .benefits-button{
    display:flex;
    gap:15px;
    justify-content:center;
    margin-bottom:44px;
  }
  .benefits-button__link{
    background:#2f4983;
    width:16px;
    height:16px;
    border-radius:10px;
  }
  .benefits-button__link--active{
    background:#24a3ff;
  }
}
@media (max-width: 991.8px) and (min-width: 576px){
  .benefits-content__wrap{
    grid-template-columns:1fr 1fr;
  }
}
@media (max-width: 767.8px){
  .header{
    padding-top:14px;
    background:linear-gradient(42.01deg, #323264 14.33%, #323264 51.39%, #7a425e 87.53%) center no-repeat;
  }
  .header__title{
    max-width:485px;
    padding-top:14px;
  }
  .header__scroll{
    top:84%;
  }
  .navbar__list{
    margin-left:-5px;
  }
}
@media (max-width: 767.8px) and (min-width: 576px){
  .contacts{
    gap:15px;
  }
  .header__grid{
    grid-template-areas:"cont" "logo" "burger";
    gap:15px;
    margin-bottom:132px;
  }
  .header__logo{
    padding-top:8px;
  }
}
@media (max-width: 575.8px){
  .contacts{
    justify-content:space-between;
  }
  .contacts__lang-link{
    color:#b3b3ba;
  }
  .contacts__lang-link--active{
    color:#ffffff;
  }
  .contacts__address-link{
    display:none;
  }
  .contacts__phone{
    margin-left:auto;
  }
  .contacts__phone-link{
    color:#b3b3ba;
    padding:5px 0 5px 5px;
  }
  .contacts__social-link{
    display:none;
  }
  .header::after{
    top:60%;
    bottom:12%;
  }
  .header__grid{
    grid-template-areas:"cont cont" "logo burger";
    grid-template-columns:1fr 3fr;
    align-items:center;
    margin-bottom:85px;
  }
  .header__grid{
    gap:18px;
    margin-bottom:96px;
  }
  .header__logo-img{
    width:77px;
    height:31px;
  }
  .header__title{
    padding-top:40px;
  }
  .header__img{
    width:100%;
    height:62%;
    object-fit:cover;
    position:absolute;
  }
  .header__img{
    top:26%;
  }
  .header__scroll{
    top:74%;
  }
  .navbar{
    margin-left:auto;
  }
  .navbar__list{
    display:none;
  }
  .benefits-info{
    padding-bottom:20px;
  }
  .benefits-info__link--accent{
    font-size:14px;
    text-transform:uppercase;
    letter-spacing:1px;
  }
  .benefits-info__text-box{
    margin-top:-8px;
    gap:15px;
  }
  .benefits-info__title{
    font-size:22px;
    line-height:26px;
  }
  .benefits-info__description{
    font-size:18px;
    line-height:26px;
  }
  .item-benefits__picture{
    align-items:center;
    margin-bottom:10px;
    gap:10px;
  }
  .item-benefits__img-box{
    max-width:64px;
    height:64px;
    border-radius:18px;
  }
  .item-benefits__img{
    width:70%;
  }
  .item-benefits__title{
    font-size:18px;
    line-height:21px;
  }
  .item-benefits__description{
    font-size:16px;
    line-height:22px;
  }
  .benefits-content__title{
    font-size:32px;
    line-height:38px;
    margin-bottom:20px;
  }
  .benefits-content__wrap{
    font-size:38px;
    line-height:46px;
    gap:40px 40px;
  }
}
@media (max-width: 479.8px){
  .navbar__burger{
    width:18px;
    height:30px;
  }
  .navbar__burger span{
    height:6%;
  }
  .navbar__burger span:nth-of-type(2){
    top:6px;
  }
  .navbar__burger span:nth-of-type(3){
    top:12px;
  }
}
@media (max-width: 419.8px){
  .Benefits{
    background:linear-gradient(256.57deg, #323264 11.93%, #323264 61%, #643e72 83.46%);
  }
}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */