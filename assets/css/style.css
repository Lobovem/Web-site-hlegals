@charset "UTF-8";
/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */
html{
  line-height:1.15;
  -webkit-text-size-adjust:100%;
}
body{
  margin:0;
}
main{
  display:block;
}
h1{
  font-size:2em;
  margin:0.67em 0;
}
hr{
  box-sizing:content-box;
  height:0;
  overflow:visible;
}
pre{
  font-family:monospace, monospace;
  font-size:1em;
}
a{
  background-color:transparent;
}
abbr[title]{
  border-bottom:none;
  text-decoration:underline;
  text-decoration:underline dotted;
}
b,
strong{
  font-weight:bolder;
}
code,
kbd,
samp{
  font-family:monospace, monospace;
  font-size:1em;
}
small{
  font-size:80%;
}
sub,
sup{
  font-size:75%;
  line-height:0;
  position:relative;
  vertical-align:baseline;
}

sub{
  bottom:-0.25em;
}

sup{
  top:-0.5em;
}
img{
  border-style:none;
}
button,
input,
optgroup,
select,
textarea{
  font-family:inherit;
  font-size:100%;
  line-height:1.15;
  margin:0;
}
button,
input{
  overflow:visible;
}
button,
select{
  text-transform:none;
}
button,
[type=button],
[type=reset],
[type=submit]{
  -webkit-appearance:button;
}
button::-moz-focus-inner,
[type=button]::-moz-focus-inner,
[type=reset]::-moz-focus-inner,
[type=submit]::-moz-focus-inner{
  border-style:none;
  padding:0;
}
button:-moz-focusring,
[type=button]:-moz-focusring,
[type=reset]:-moz-focusring,
[type=submit]:-moz-focusring{
  outline:1px dotted ButtonText;
}
fieldset{
  padding:0.35em 0.75em 0.625em;
}
legend{
  box-sizing:border-box;
  color:inherit;
  display:table;
  max-width:100%;
  padding:0;
  white-space:normal;
}
progress{
  vertical-align:baseline;
}
textarea{
  overflow:auto;
}
[type=checkbox],
[type=radio]{
  box-sizing:border-box;
  padding:0;
}
[type=number]::-webkit-inner-spin-button,
[type=number]::-webkit-outer-spin-button{
  height:auto;
}
[type=search]{
  -webkit-appearance:textfield;
  outline-offset:-2px;
}
[type=search]::-webkit-search-decoration{
  -webkit-appearance:none;
}
::-webkit-file-upload-button{
  -webkit-appearance:button;
  font:inherit;
}
details{
  display:block;
}
summary{
  display:list-item;
}
template{
  display:none;
}
[hidden]{
  display:none;
}

@font-face{
  font-family:"TT Norms";
  src:url("../fonts/TTNorms-Bold.woff2") format("woff2");
  font-weight:bold;
  font-style:normal;
  font-display:swap;
}
@font-face{
  font-family:"TT Norms";
  src:url("../fonts/TTNorms-Medium.woff2") format("woff2");
  font-weight:500;
  font-style:normal;
  font-display:swap;
}
@font-face{
  font-family:"TT Norms";
  src:url("../fonts/TTNorms-Regular.woff2") format("woff2");
  font-weight:normal;
  font-style:normal;
  font-display:swap;
}
.visually-hidden{
  position:absolute;
  overflow:hidden;
  clip:rect(0 0 0 0);
  width:1px;
  height:1px;
  margin:-1px;
  padding:0;
  white-space:nowrap;
  border:0;
  clip-path:inset(100%);
}

.container{
  width:min(100% - 40px, 1320px);
  margin-inline:auto;
}

*,
*::before,
*::after{
  box-sizing:border-box;
  margin:0;
  padding:0;
}

html{
  font-family:"TT Norms", sans-serif;
  font-size:16px;
  font-weight:normal;
  font-style:normal;
}

.body{
  color:#000000;
}

a{
  text-decoration:none;
  color:#000000;
}

.header-navbar{
  display:flex;
  flex-direction:column;
  align-items:end;
  gap:15px 0px;
}
.header-navbar__contact{
  display:flex;
  gap:10px;
  align-items:flex-end;
}
.header-navbar__lang{
  font-weight:700;
  font-size:12px;
  line-height:14px;
  letter-spacing:1px;
  color:#ffffff;
  text-transform:uppercase;
  padding:5px;
}
.header-navbar__lang--active{
  background:#f0145a;
  border-radius:8px;
}
.header-navbar__address{
  line-height:19px;
  color:#ffffff;
  padding:5px;
  margin-left:-7px;
}
.header-navbar__address::before{
  content:"•";
  color:#e6e6f0;
  margin-right:7px;
  display:inline-block;
  font-size:30px;
}
.header-navbar__phone{
  font-weight:700;
  line-height:19px;
  color:#ffffff;
  padding:5px;
  margin-left:-10px;
}
.header-navbar__phone::before{
  content:"•";
  color:#e6e6f0;
  margin-right:7px;
  display:inline-block;
  font-size:23px;
}
.header-navbar__social{
  margin-left:-7px;
}
.header-navbar__social::before{
  content:"•";
  color:#e6e6f0;
  margin-right:7px;
  display:inline-block;
  font-size:30px;
}
.header{
  position:relative;
  background:url(../img/bg-logo.svg) center 43% no-repeat, linear-gradient(42.01deg, #323264 14.33%, #323264 51.39%, #7a425e 87.53%) center no-repeat;
  min-height:800px;
  padding-top:42px;
}
.header__wrap-contact{
  display:flex;
  justify-content:space-between;
}
.header__logo{
  padding-top:8px;
}
.header__title{
  font-size:38px;
  line-height:45px;
  font-weight:500;
  text-align:center;
  color:#ffffff;
  max-width:615px;
  position:absolute;
  position:absolute;
  top:32%;
  left:29%;
}
.header__picture{
  display:flex;
  justify-content:center;
  align-items:center;
  text-align:center;
  padding-top:182px;
}
.header__img{
  width:595px;
  height:687px;
}
.navbar__list{
  display:flex;
  justify-content:end;
  margin:0;
  padding:0;
  list-style:none;
  gap:10px;
}
.navbar__link{
  font-size:18px;
  line-height:21px;
  color:#ffffff;
  padding:5px 0 5px 5px;
}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */